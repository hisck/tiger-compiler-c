State 95 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | NIL
    4    | LPAREN RPAREN
    5    | INT
    6    | STRING
    7    | MINUS exp
    8    | func_call
    9    | arith_exp
   10    | cmp_exp
   11    | bool_exp
   12    | record_create
   13    | array_create
   14    | lvalue ASSIGN exp
   15    | IF exp THEN exp ELSE exp
   16    | IF exp THEN exp
   17    | WHILE exp DO exp
   18    | DO exp WHILE exp
   19    | FOR ID ASSIGN exp TO exp DO exp
   20    | BREAK
   21    | LET decs IN expseq END
   22    | LPAREN expseq RPAREN

   23 lvalue: ID
   24       | ID LBRACK exp RBRACK
   25       | lvalue LBRACK exp RBRACK
   26       | lvalue DOT ID

   27 func_call: ID LPAREN explist RPAREN

   28 explist: %empty
   29        | explist_nonempty

   30 explist_nonempty: exp
   31                 | explist_nonempty COMMA exp

   32 arith_exp: exp PLUS exp
   33          | exp MINUS exp
   34          | exp TIMES exp
   35          | exp DIVIDE exp

   36 cmp_exp: exp EQ exp
   37        | exp NEQ exp
   38        | exp LT exp
   39        | exp LE exp
   40        | exp GT exp
   41        | exp GE exp

   42 bool_exp: exp AND exp
   43         | exp OR exp

   44 record_create: ID LBRACE record_create_list RBRACE

   45 record_create_list: %empty
   46                   | record_create_list_nonempty

   47 record_create_list_nonempty: record_create_field
   48                            | record_create_list_nonempty COMMA record_create_field

   49 record_create_field: ID EQ exp

   50 array_create: ID LBRACK exp RBRACK OF exp

   51 decs: %empty
   52     | decs dec

   53 dec: tydeclist
   54    | vardec
   55    | fundeclist

   56 tydeclist: tydec
   57          | tydec tydeclist

   58 tydec: TYPE ID EQ ty

   59 ty: ID
   60   | LBRACE tyfields RBRACE
   61   | ARRAY OF ID

   62 tyfields: %empty
   63         | tyfields_nonempty

   64 tyfields_nonempty: tyfield
   65                  | tyfields_nonempty COMMA tyfield

   66 tyfield: ID COLON ID

   67 vardec: VAR ID ASSIGN exp
   68       | VAR ID COLON ID ASSIGN exp

   69 fundeclist: fundec
   70           | fundec fundeclist

   71 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   72       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   73 expseq: exp
   74       | expseq SEMICOLON exp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    LOW (258)
    TYPE (259) 58
    FUNCTION (260) 71 72
    ID <sval> (261) 19 23 24 26 27 44 49 50 58 59 61 66 67 68 71 72
    LBRACK (262) 24 25 50
    DO (263) 17 18 19
    OF (264) 50 61
    THEN (265) 15 16
    ELSE (266) 15
    SEMICOLON (267) 74
    ASSIGN (268) 14 19 67 68
    OR (269) 43
    AND (270) 42
    EQ (271) 36 49 58 71 72
    NEQ (272) 37
    LT (273) 38
    LE (274) 39
    GT (275) 40
    GE (276) 41
    PLUS (277) 32
    MINUS (278) 7 33
    TIMES (279) 34
    DIVIDE (280) 35
    UMINUS (281)
    STRING <sval> (282) 6
    INT <ival> (283) 5
    COMMA (284) 31 48 65
    COLON (285) 66 68 72
    LPAREN (286) 4 22 27 71 72
    RPAREN (287) 4 22 27 71 72
    RBRACK (288) 24 25 50
    LBRACE (289) 44 60
    RBRACE (290) 44 60
    DOT (291) 26
    ARRAY (292) 61
    IF (293) 15 16
    WHILE (294) 17 18
    FOR (295) 19
    TO (296) 19
    LET (297) 21
    IN (298) 21
    END (299) 21
    BREAK (300) 20
    NIL (301) 3
    VAR (302) 67 68


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    program <exp> (49)
        on left: 1
        on right: 0
    exp <exp> (50)
        on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
        on right: 1 7 14 15 16 17 18 19 24 25 30 31 32 33 34 35 36 37 38 39 40 41 42 43 49 50 67 68 71 72 73 74
    lvalue <var> (51)
        on left: 23 24 25 26
        on right: 2 14 25 26
    func_call <exp> (52)
        on left: 27
        on right: 8
    explist <explist> (53)
        on left: 28 29
        on right: 27
    explist_nonempty <explist> (54)
        on left: 30 31
        on right: 29 31
    arith_exp <exp> (55)
        on left: 32 33 34 35
        on right: 9
    cmp_exp <exp> (56)
        on left: 36 37 38 39 40 41
        on right: 10
    bool_exp <exp> (57)
        on left: 42 43
        on right: 11
    record_create <exp> (58)
        on left: 44
        on right: 12
    record_create_list <efieldlist> (59)
        on left: 45 46
        on right: 44
    record_create_list_nonempty <efieldlist> (60)
        on left: 47 48
        on right: 46 48
    record_create_field <efield> (61)
        on left: 49
        on right: 47 48
    array_create <exp> (62)
        on left: 50
        on right: 13
    decs <declist> (63)
        on left: 51 52
        on right: 21 52
    dec <dec> (64)
        on left: 53 54 55
        on right: 52
    tydeclist <dec> (65)
        on left: 56 57
        on right: 53 57
    tydec <namety> (66)
        on left: 58
        on right: 56 57
    ty <ty> (67)
        on left: 59 60 61
        on right: 58
    tyfields <fieldlist> (68)
        on left: 62 63
        on right: 60 71 72
    tyfields_nonempty <fieldlist> (69)
        on left: 64 65
        on right: 63 65
    tyfield <field> (70)
        on left: 66
        on right: 64 65
    vardec <dec> (71)
        on left: 67 68
        on right: 54
    fundeclist <dec> (72)
        on left: 69 70
        on right: 55 70
    fundec <fundec> (73)
        on left: 71 72
        on right: 69 70
    expseq <explist> (74)
        on left: 73 74
        on right: 21 22 74


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    program        go to state 13
    exp            go to state 14
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 1

   23 lvalue: ID .
   24       | ID . LBRACK exp RBRACK
   27 func_call: ID . LPAREN explist RPAREN
   44 record_create: ID . LBRACE record_create_list RBRACE
   50 array_create: ID . LBRACK exp RBRACK OF exp

    LBRACK  shift, and go to state 22
    LPAREN  shift, and go to state 23
    LBRACE  shift, and go to state 24

    $default  reduce using rule 23 (lvalue)


State 2

   18 exp: DO . exp WHILE exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 25
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 3

    7 exp: MINUS . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 26
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 4

    6 exp: STRING .

    $default  reduce using rule 6 (exp)


State 5

    5 exp: INT .

    $default  reduce using rule 5 (exp)


State 6

    4 exp: LPAREN . RPAREN
   22    | LPAREN . expseq RPAREN

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    RPAREN  shift, and go to state 27
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 28
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21
    expseq         go to state 29


State 7

   15 exp: IF . exp THEN exp ELSE exp
   16    | IF . exp THEN exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 30
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 8

   17 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 31
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 9

   19 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 32


State 10

   21 exp: LET . decs IN expseq END

    $default  reduce using rule 51 (decs)

    decs  go to state 33


State 11

   20 exp: BREAK .

    $default  reduce using rule 20 (exp)


State 12

    3 exp: NIL .

    $default  reduce using rule 3 (exp)


State 13

    0 $accept: program . $end

    $end  shift, and go to state 34


State 14

    1 program: exp .
   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 1 (program)


State 15

    2 exp: lvalue .
   14    | lvalue . ASSIGN exp
   25 lvalue: lvalue . LBRACK exp RBRACK
   26       | lvalue . DOT ID

    LBRACK  shift, and go to state 47
    ASSIGN  shift, and go to state 48
    DOT     shift, and go to state 49

    $default  reduce using rule 2 (exp)


State 16

    8 exp: func_call .

    $default  reduce using rule 8 (exp)


State 17

    9 exp: arith_exp .

    $default  reduce using rule 9 (exp)


State 18

   10 exp: cmp_exp .

    $default  reduce using rule 10 (exp)


State 19

   11 exp: bool_exp .

    $default  reduce using rule 11 (exp)


State 20

   12 exp: record_create .

    $default  reduce using rule 12 (exp)


State 21

   13 exp: array_create .

    $default  reduce using rule 13 (exp)


State 22

   24 lvalue: ID LBRACK . exp RBRACK
   50 array_create: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 50
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 23

   27 func_call: ID LPAREN . explist RPAREN

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    $default  reduce using rule 28 (explist)

    exp               go to state 51
    lvalue            go to state 15
    func_call         go to state 16
    explist           go to state 52
    explist_nonempty  go to state 53
    arith_exp         go to state 17
    cmp_exp           go to state 18
    bool_exp          go to state 19
    record_create     go to state 20
    array_create      go to state 21


State 24

   44 record_create: ID LBRACE . record_create_list RBRACE

    ID  shift, and go to state 54

    $default  reduce using rule 45 (record_create_list)

    record_create_list           go to state 55
    record_create_list_nonempty  go to state 56
    record_create_field          go to state 57


State 25

   18 exp: DO exp . WHILE exp
   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    WHILE   shift, and go to state 58


State 26

    7 exp: MINUS exp .
   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    $default  reduce using rule 7 (exp)


State 27

    4 exp: LPAREN RPAREN .

    $default  reduce using rule 4 (exp)


State 28

   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp
   73 expseq: exp .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 73 (expseq)


State 29

   22 exp: LPAREN expseq . RPAREN
   74 expseq: expseq . SEMICOLON exp

    SEMICOLON  shift, and go to state 59
    RPAREN     shift, and go to state 60


State 30

   15 exp: IF exp . THEN exp ELSE exp
   16    | IF exp . THEN exp
   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    THEN    shift, and go to state 61
    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46


State 31

   17 exp: WHILE exp . DO exp
   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    DO      shift, and go to state 62
    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46


State 32

   19 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 63


State 33

   21 exp: LET decs . IN expseq END
   52 decs: decs . dec

    TYPE      shift, and go to state 64
    FUNCTION  shift, and go to state 65
    IN        shift, and go to state 66
    VAR       shift, and go to state 67

    dec         go to state 68
    tydeclist   go to state 69
    tydec       go to state 70
    vardec      go to state 71
    fundeclist  go to state 72
    fundec      go to state 73


State 34

    0 $accept: program $end .

    $default  accept


State 35

   43 bool_exp: exp OR . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 74
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 36

   42 bool_exp: exp AND . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 75
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 37

   36 cmp_exp: exp EQ . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 76
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 38

   37 cmp_exp: exp NEQ . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 77
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 39

   38 cmp_exp: exp LT . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 78
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 40

   39 cmp_exp: exp LE . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 79
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 41

   40 cmp_exp: exp GT . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 80
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 42

   41 cmp_exp: exp GE . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 81
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 43

   32 arith_exp: exp PLUS . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 82
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 44

   33 arith_exp: exp MINUS . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 83
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 45

   34 arith_exp: exp TIMES . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 84
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 46

   35 arith_exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 85
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 47

   25 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 86
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 48

   14 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 87
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 49

   26 lvalue: lvalue DOT . ID

    ID  shift, and go to state 88


State 50

   24 lvalue: ID LBRACK exp . RBRACK
   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp
   50 array_create: ID LBRACK exp . RBRACK OF exp

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    RBRACK  shift, and go to state 89


State 51

   30 explist_nonempty: exp .
   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 30 (explist_nonempty)


State 52

   27 func_call: ID LPAREN explist . RPAREN

    RPAREN  shift, and go to state 90


State 53

   29 explist: explist_nonempty .
   31 explist_nonempty: explist_nonempty . COMMA exp

    COMMA  shift, and go to state 91

    $default  reduce using rule 29 (explist)


State 54

   49 record_create_field: ID . EQ exp

    EQ  shift, and go to state 92


State 55

   44 record_create: ID LBRACE record_create_list . RBRACE

    RBRACE  shift, and go to state 93


State 56

   46 record_create_list: record_create_list_nonempty .
   48 record_create_list_nonempty: record_create_list_nonempty . COMMA record_create_field

    COMMA  shift, and go to state 94

    $default  reduce using rule 46 (record_create_list)


State 57

   47 record_create_list_nonempty: record_create_field .

    $default  reduce using rule 47 (record_create_list_nonempty)


State 58

   18 exp: DO exp WHILE . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 95
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 59

   74 expseq: expseq SEMICOLON . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 96
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 60

   22 exp: LPAREN expseq RPAREN .

    $default  reduce using rule 22 (exp)


State 61

   15 exp: IF exp THEN . exp ELSE exp
   16    | IF exp THEN . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 97
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 62

   17 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 98
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 63

   19 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 99
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 64

   58 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 100


State 65

   71 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   72       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 101


State 66

   21 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 28
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21
    expseq         go to state 102


State 67

   67 vardec: VAR . ID ASSIGN exp
   68       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 103


State 68

   52 decs: decs dec .

    $default  reduce using rule 52 (decs)


State 69

   53 dec: tydeclist .

    $default  reduce using rule 53 (dec)


State 70

   56 tydeclist: tydec .
   57          | tydec . tydeclist

    TYPE  shift, and go to state 64

    $default  reduce using rule 56 (tydeclist)

    tydeclist  go to state 104
    tydec      go to state 70


State 71

   54 dec: vardec .

    $default  reduce using rule 54 (dec)


State 72

   55 dec: fundeclist .

    $default  reduce using rule 55 (dec)


State 73

   69 fundeclist: fundec .
   70           | fundec . fundeclist

    FUNCTION  shift, and go to state 65

    $default  reduce using rule 69 (fundeclist)

    fundeclist  go to state 105
    fundec      go to state 73


State 74

   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp
   43         | exp OR exp .

    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 43 (bool_exp)


State 75

   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   42         | exp AND exp .
   43         | exp . OR exp

    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 42 (bool_exp)


State 76

   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   36        | exp EQ exp .
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 36 (cmp_exp)


State 77

   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   37        | exp NEQ exp .
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 37 (cmp_exp)


State 78

   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   38        | exp LT exp .
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 38 (cmp_exp)


State 79

   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   39        | exp LE exp .
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 39 (cmp_exp)


State 80

   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   40        | exp GT exp .
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 40 (cmp_exp)


State 81

   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   41        | exp GE exp .
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 41 (cmp_exp)


State 82

   32 arith_exp: exp . PLUS exp
   32          | exp PLUS exp .
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 32 (arith_exp)


State 83

   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   33          | exp MINUS exp .
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 33 (arith_exp)


State 84

   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   34          | exp TIMES exp .
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    $default  reduce using rule 34 (arith_exp)


State 85

   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   35          | exp DIVIDE exp .
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    $default  reduce using rule 35 (arith_exp)


State 86

   25 lvalue: lvalue LBRACK exp . RBRACK
   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    RBRACK  shift, and go to state 106


State 87

   14 exp: lvalue ASSIGN exp .
   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 14 (exp)


State 88

   26 lvalue: lvalue DOT ID .

    $default  reduce using rule 26 (lvalue)


State 89

   24 lvalue: ID LBRACK exp RBRACK .
   50 array_create: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 107

    $default  reduce using rule 24 (lvalue)


State 90

   27 func_call: ID LPAREN explist RPAREN .

    $default  reduce using rule 27 (func_call)


State 91

   31 explist_nonempty: explist_nonempty COMMA . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 108
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 92

   49 record_create_field: ID EQ . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 109
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 93

   44 record_create: ID LBRACE record_create_list RBRACE .

    $default  reduce using rule 44 (record_create)


State 94

   48 record_create_list_nonempty: record_create_list_nonempty COMMA . record_create_field

    ID  shift, and go to state 54

    record_create_field  go to state 110


State 95

   18 exp: DO exp WHILE exp .
   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    OR        [reduce using rule 18 (exp)]
    AND       [reduce using rule 18 (exp)]
    EQ        [reduce using rule 18 (exp)]
    NEQ       [reduce using rule 18 (exp)]
    LT        [reduce using rule 18 (exp)]
    LE        [reduce using rule 18 (exp)]
    GT        [reduce using rule 18 (exp)]
    GE        [reduce using rule 18 (exp)]
    PLUS      [reduce using rule 18 (exp)]
    MINUS     [reduce using rule 18 (exp)]
    TIMES     [reduce using rule 18 (exp)]
    DIVIDE    [reduce using rule 18 (exp)]
    $default  reduce using rule 18 (exp)


State 96

   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp
   74 expseq: expseq SEMICOLON exp .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 74 (expseq)


State 97

   15 exp: IF exp THEN exp . ELSE exp
   16    | IF exp THEN exp .
   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    ELSE    shift, and go to state 111
    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 16 (exp)


State 98

   17 exp: WHILE exp DO exp .
   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 17 (exp)


State 99

   19 exp: FOR ID ASSIGN exp . TO exp DO exp
   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46
    TO      shift, and go to state 112


State 100

   58 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 113


State 101

   71 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   72       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 114


State 102

   21 exp: LET decs IN expseq . END
   74 expseq: expseq . SEMICOLON exp

    SEMICOLON  shift, and go to state 59
    END        shift, and go to state 115


State 103

   67 vardec: VAR ID . ASSIGN exp
   68       | VAR ID . COLON ID ASSIGN exp

    ASSIGN  shift, and go to state 116
    COLON   shift, and go to state 117


State 104

   57 tydeclist: tydec tydeclist .

    $default  reduce using rule 57 (tydeclist)


State 105

   70 fundeclist: fundec fundeclist .

    $default  reduce using rule 70 (fundeclist)


State 106

   25 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 25 (lvalue)


State 107

   50 array_create: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 118
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 108

   31 explist_nonempty: explist_nonempty COMMA exp .
   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 31 (explist_nonempty)


State 109

   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp
   49 record_create_field: ID EQ exp .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 49 (record_create_field)


State 110

   48 record_create_list_nonempty: record_create_list_nonempty COMMA record_create_field .

    $default  reduce using rule 48 (record_create_list_nonempty)


State 111

   15 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 119
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 112

   19 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 120
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 113

   58 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 121
    LBRACE  shift, and go to state 122
    ARRAY   shift, and go to state 123

    ty  go to state 124


State 114

   71 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   72       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 125

    $default  reduce using rule 62 (tyfields)

    tyfields           go to state 126
    tyfields_nonempty  go to state 127
    tyfield            go to state 128


State 115

   21 exp: LET decs IN expseq END .

    $default  reduce using rule 21 (exp)


State 116

   67 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 129
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 117

   68 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 130


State 118

   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp
   50 array_create: ID LBRACK exp RBRACK OF exp .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 50 (array_create)


State 119

   15 exp: IF exp THEN exp ELSE exp .
   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 15 (exp)


State 120

   19 exp: FOR ID ASSIGN exp TO exp . DO exp
   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    DO      shift, and go to state 131
    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46


State 121

   59 ty: ID .

    $default  reduce using rule 59 (ty)


State 122

   60 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 125

    $default  reduce using rule 62 (tyfields)

    tyfields           go to state 132
    tyfields_nonempty  go to state 127
    tyfield            go to state 128


State 123

   61 ty: ARRAY . OF ID

    OF  shift, and go to state 133


State 124

   58 tydec: TYPE ID EQ ty .

    $default  reduce using rule 58 (tydec)


State 125

   66 tyfield: ID . COLON ID

    COLON  shift, and go to state 134


State 126

   71 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   72       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 135


State 127

   63 tyfields: tyfields_nonempty .
   65 tyfields_nonempty: tyfields_nonempty . COMMA tyfield

    COMMA  shift, and go to state 136

    $default  reduce using rule 63 (tyfields)


State 128

   64 tyfields_nonempty: tyfield .

    $default  reduce using rule 64 (tyfields_nonempty)


State 129

   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp
   67 vardec: VAR ID ASSIGN exp .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 67 (vardec)


State 130

   68 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 137


State 131

   19 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 138
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 132

   60 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 139


State 133

   61 ty: ARRAY OF . ID

    ID  shift, and go to state 140


State 134

   66 tyfield: ID COLON . ID

    ID  shift, and go to state 141


State 135

   71 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   72       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    EQ     shift, and go to state 142
    COLON  shift, and go to state 143


State 136

   65 tyfields_nonempty: tyfields_nonempty COMMA . tyfield

    ID  shift, and go to state 125

    tyfield  go to state 144


State 137

   68 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 145
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 138

   19 exp: FOR ID ASSIGN exp TO exp DO exp .
   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 19 (exp)


State 139

   60 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 60 (ty)


State 140

   61 ty: ARRAY OF ID .

    $default  reduce using rule 61 (ty)


State 141

   66 tyfield: ID COLON ID .

    $default  reduce using rule 66 (tyfield)


State 142

   71 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 146
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 143

   72 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 147


State 144

   65 tyfields_nonempty: tyfields_nonempty COMMA tyfield .

    $default  reduce using rule 65 (tyfields_nonempty)


State 145

   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp
   68 vardec: VAR ID COLON ID ASSIGN exp .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 68 (vardec)


State 146

   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp
   71 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 71 (fundec)


State 147

   72 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 148


State 148

   72 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    DO      shift, and go to state 2
    MINUS   shift, and go to state 3
    STRING  shift, and go to state 4
    INT     shift, and go to state 5
    LPAREN  shift, and go to state 6
    IF      shift, and go to state 7
    WHILE   shift, and go to state 8
    FOR     shift, and go to state 9
    LET     shift, and go to state 10
    BREAK   shift, and go to state 11
    NIL     shift, and go to state 12

    exp            go to state 149
    lvalue         go to state 15
    func_call      go to state 16
    arith_exp      go to state 17
    cmp_exp        go to state 18
    bool_exp       go to state 19
    record_create  go to state 20
    array_create   go to state 21


State 149

   32 arith_exp: exp . PLUS exp
   33          | exp . MINUS exp
   34          | exp . TIMES exp
   35          | exp . DIVIDE exp
   36 cmp_exp: exp . EQ exp
   37        | exp . NEQ exp
   38        | exp . LT exp
   39        | exp . LE exp
   40        | exp . GT exp
   41        | exp . GE exp
   42 bool_exp: exp . AND exp
   43         | exp . OR exp
   72 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    OR      shift, and go to state 35
    AND     shift, and go to state 36
    EQ      shift, and go to state 37
    NEQ     shift, and go to state 38
    LT      shift, and go to state 39
    LE      shift, and go to state 40
    GT      shift, and go to state 41
    GE      shift, and go to state 42
    PLUS    shift, and go to state 43
    MINUS   shift, and go to state 44
    TIMES   shift, and go to state 45
    DIVIDE  shift, and go to state 46

    $default  reduce using rule 72 (fundec)
